#!/usr/bin/env python3
"""
Check the existing folder structure
"""

import os
import json
from dotenv import load_dotenv
from googleapiclient.discovery import build
from google.oauth2 import service_account

# Load environment variables
load_dotenv()

GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON = os.getenv('GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON')

def check_existing_structure():
    """Check existing folder structure"""
    
    try:
        # Parse credentials
        credentials_info = json.loads(GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON)
        
        # Create credentials
        credentials = service_account.Credentials.from_service_account_info(
            credentials_info,
            scopes=['https://www.googleapis.com/auth/drive.file']
        )
        
        # Build Drive service
        drive_service = build('drive', 'v3', credentials=credentials)
        
        print("[SUCCESS] Google Drive API initialized")
        
        # Check the existing KF_Barbers folder
        kf_barbers_id = "1TKUC6HIweVwq6xLxvbpTX6FF-KidDy0V"
        aug_25_id = "1EKSMIBgakj5R-4B-Q7Asf3BEcuGBFVzh"
        
        print(f"\n[CHECKING] Existing folder structure...")
        print(f"KF_Barbers folder ID: {kf_barbers_id}")
        print(f"Aug_25 folder ID: {aug_25_id}")
        
        # Try to access the KF_Barbers folder
        try:
            kf_folder = drive_service.files().get(fileId=kf_barbers_id).execute()
            print(f"[SUCCESS] Can access KF_Barbers folder: {kf_folder['name']}")
            
            # Try to create a test file in the Aug_25 folder
            print(f"\n[TESTING] Upload to existing Aug_25 folder...")
            
            # Create a simple test file content
            import tempfile
            
            with tempfile.NamedTemporaryFile(mode='w', suffix='.txt', delete=False) as temp_file:
                temp_file.write("Test upload to existing folder structure\nGenerated by Content Factory Pro")
                temp_file_path = temp_file.name
            
            # Upload test file
            from googleapiclient.http import MediaFileUpload
            
            file_metadata = {
                'name': 'Test_Upload_Success.txt',
                'parents': [aug_25_id]
            }
            
            media = MediaFileUpload(temp_file_path, resumable=True)
            
            uploaded_file = drive_service.files().create(
                body=file_metadata,
                media_body=media,
                fields='id,name,webViewLink,parents'
            ).execute()
            
            print(f"[SUCCESS] Test file uploaded!")
            print(f"[FILE] {uploaded_file['name']}")
            print(f"[LINK] {uploaded_file['webViewLink']}")
            print(f"[LOCATION] Existing folder structure works!")
            
            # Clean up temp file
            os.unlink(temp_file_path)
            
            return True
            
        except Exception as e:
            print(f"[ERROR] Cannot access existing folders: {e}")
            return False
            
    except Exception as e:
        print(f"[ERROR] Test failed: {e}")
        return False

if __name__ == "__main__":
    check_existing_structure()